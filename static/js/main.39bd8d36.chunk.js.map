{"version":3,"sources":["conexion.js","actions.js","App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","getCollection","coleccion","a","result","statusResponse","data","error","getDocs","collection","dataSnapshot","dataFirebaseDocs","docs","map","item","id","name","addDocument","addDoc","response","updateOneDocument","doc","updateDoc","deleteOneDocument","deleteDoc","App","_","require","useState","task","setTask","tasks","setTasks","editMode","setEditMode","setId","useEffect","resultDataSort","orderBy","addTask","e","preventDefault","toUpperCase","alert","newTask","tareas","tarea_sort","deleteTask","filtro","filter","tarea","saveTask","taskModify","className","href","src","alt","onClick","asc","desc","size","editTask","onSubmit","type","placeholder","required","onChange","text","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39bd8d36.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n\r\n// Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDRdi6Sw8VHg2zBzJwQlsj1Oc0kWGyDF8Y\",\r\n  authDomain: \"notebo-ok.firebaseapp.com\",\r\n  databaseURL: \"https://notebo-ok.firebaseio.com\",\r\n  projectId: \"notebo-ok\",\r\n  storageBucket: \"notebo-ok.appspot.com\",\r\n  messagingSenderId: \"932327958865\",\r\n  appId: \"1:932327958865:web:c2f6a53903d8312a460b70\",\r\n  measurementId: \"G-8R84H3KZRC\",\r\n};\r\n\r\n// Initialize Firebase\r\nexport const firebaseApp = initializeApp(firebaseConfig);\r\n","import { firebaseApp } from \"./conexion\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  doc,\r\n  deleteDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst db = getFirestore(firebaseApp);\r\n\r\nexport const getCollection = async (coleccion) => {\r\n  const result = { statusResponse: false, data: null, error: null };\r\n  try {\r\n    const dataSnapshot = await getDocs(collection(db, coleccion));\r\n    // const dataId = dataSnapshot.docs.map((item) => item.id);\r\n    // const dataName = dataSnapshot.docs.map((item) => item.data().name);\r\n    const dataFirebaseDocs = dataSnapshot.docs.map((item) => {\r\n      return [\r\n        {\r\n          id: item.id,\r\n          name: item.data().name,\r\n        },\r\n      ];\r\n    });\r\n    result.data = dataFirebaseDocs.map((item) => item[0]);\r\n    result.statusResponse = true;\r\n  } catch (error) {\r\n    result.error = `Error en actions.js - en la funcion getCollection - ${error}`;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const addDocument = async (coleccion, data) => {\r\n  const result = { statusResponse: false, data: null, error: null };\r\n  try {\r\n    // Agrega el registro ingresado como un (documento addDoc)\r\n    // a la collecion de la db\r\n    const response = await addDoc(collection(db, coleccion), data);\r\n\r\n    // armamos nuestro obj result\r\n    // con statusResponse: true\r\n    // y result.data con el id que nos devuelve el metodo addDoc() y que\r\n    // luego se usara el response.id como result.data.id\r\n    result.data = response;\r\n    result.statusResponse = true;\r\n  } catch (error) {\r\n    result.error = `Error en actions.js - en la funcion addDocument - ${error}`;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getOneDocument = async (coleccion, id) => {\r\n  const result = { statusResponse: false, data: null, error: null };\r\n  try {\r\n    // Agrega el registro ingresado como un (documento addDoc)\r\n    // a la collecion de la db\r\n    const response = doc(collection(db, coleccion, id));\r\n\r\n    // armamos nuestro obj result con statusResponse: true\r\n    // y result.data con el id que nos devuelve el metodo add() en response.id\r\n    result.data = { id: response.id, ...response.data() };\r\n    result.statusResponse = true;\r\n  } catch (error) {\r\n    result.error = `Error en actions.js - en la funcion getOneDocument - ${error}`;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const updateOneDocument = async (coleccion, id, data) => {\r\n  const result = { statusResponse: false, error: null };\r\n\r\n  try {\r\n    // enlazamos el documento x id, de la coleccion(tasks), de la db de Firebase\r\n\r\n    const response = doc(db, coleccion, id);\r\n\r\n    //Actualizamos del enlace de response\r\n    //los datos nuevos (data) que son los campos del documento ecepto el id\r\n    await updateDoc(response, data);\r\n\r\n    // armamos nuestro obj result con statusResponse: true\r\n    result.statusResponse = true;\r\n  } catch (error) {\r\n    result.error = `Error en actions.js - en la funcion updateOneDocument - ${error}`;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const deleteOneDocument = async (coleccion, id) => {\r\n  const result = { statusResponse: false, error: null };\r\n\r\n  try {\r\n    // enlazamos el documento x id, de la coleccion(tasks), de la db de Firebase\r\n\r\n    //await db.collection(coleccion).doc(id).delete();\r\n    await deleteDoc(doc(db, coleccion, id));\r\n\r\n    // armamos nuestro obj result con statusResponse: true\r\n    result.statusResponse = true;\r\n  } catch (error) {\r\n    result.error = `Error en actions.js - en la funcion deleteOneDocument - ${error}`;\r\n  }\r\n  return result;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n//import shortid from \"shortid\";\nimport { size } from \"lodash\";\nimport {\n  addDocument,\n  getCollection,\n  updateOneDocument,\n  deleteOneDocument,\n} from \"./actions\";\n\nfunction App() {\n  const _ = require(\"lodash\");\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [id, setId] = useState(\"\");\n\n  useEffect(() => {\n    // Metodo asyncrono auto ejecutable async/await ()()\n    (async () => {\n      // al cargar la app\n      // carga los datos desde\n      // la db firebase la collecion \"tasks\" todos los documentos(c/u es un registro)\n      const result = await getCollection(\"tasks\");\n      if (result.statusResponse) {\n        const resultDataSort = _.orderBy(result.data, \"name\", \"asc\");\n        //asc();\n        setTasks(resultDataSort);\n        setId();\n      }\n    })();\n  }, [_]);\n\n  const addTask = async (e) => {\n    e.preventDefault();\n\n    const result = await addDocument(\"tasks\", { name: task.toUpperCase() });\n\n    if (!result.statusResponse) {\n      alert(result.error);\n      return;\n    }\n\n    const newTask = {\n      // id: shortid.generate(),\n      id: result.data.id,\n      name: task.toUpperCase(),\n    };\n\n    let tareas = [...tasks, newTask];\n\n    let tarea_sort = _.orderBy(tareas, \"name\", \"asc\");\n    setTasks(tarea_sort);\n\n    setTask(\"\");\n  };\n\n  const deleteTask = async (id) => {\n    const result = await deleteOneDocument(\"tasks\", id);\n\n    if (!result.statusResponse) {\n      alert(result.error);\n      return;\n    }\n\n    const filtro = tasks.filter((tarea) => tarea.id !== id);\n    setTasks(filtro);\n\n    setEditMode(false);\n    setTask(\"\");\n    setId(\"\");\n  };\n\n  const editTask = (tarea) => {\n    setTask(tarea.name);\n    setEditMode(true);\n    setId(tarea.id);\n  };\n\n  const saveTask = async (e) => {\n    e.preventDefault();\n\n    const result = await updateOneDocument(\"tasks\", id, {\n      name: task.toUpperCase(),\n    });\n\n    if (!result.statusResponse) {\n      alert(result.error);\n      return;\n    }\n\n    let taskModify = tasks.map((item) =>\n      item.id === id ? { id: id, name: task.toUpperCase() } : item\n    );\n\n    let tarea_sort = _.orderBy(taskModify, \"name\", \"asc\");\n    setTasks(tarea_sort);\n\n    setEditMode(false);\n    setTask(\"\");\n    setId(\"\");\n  };\n\n  const asc = () => {\n    let tarea_sort = _.orderBy(tasks, \"name\", \"asc\");\n    setTasks(tarea_sort);\n  };\n\n  const desc = () => {\n    let tarea_sort = _.orderBy(tasks, \"name\", \"desc\");\n    setTasks(tarea_sort);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-danger text-center text-uppercase\">\n        Productos NoteboOK - 2021\n      </h1>\n      <hr />\n      <a href=\"/\">\n        <img className=\"mt-2\" src=\"/house.png\" alt=\"Ir a Home\"></img>\n      </a>\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <h4 className=\"text-info text-center text-uppercase\">\n            Lista de Productos\n          </h4>\n          <div className=\"row pb-2 \">\n            <div className=\"col-6 d-flex align-items-center justify-content-center\">\n              <button\n                className=\"btn btn-success btn-sm float-end\"\n                onClick={() => asc()}\n              >\n                Orden (1-A-Z)\n              </button>\n            </div>\n            <div className=\"col-6 d-flex align-items-center justify-content-center\">\n              <button\n                className=\"btn btn-info btn-sm float-end mx-2\"\n                onClick={() => desc()}\n              >\n                Orden (Z-A-1)\n              </button>\n            </div>\n          </div>\n\n          {size(tasks) === 0 ? (\n            <li className=\"list-group-item text-white bg-success text-center text-uppercase rounded\">\n              No hay Productos\n            </li>\n          ) : (\n            <ul className=\"list-group\">\n              {tasks.map((tarea) => (\n                <li key={tarea.id} className=\"list-group-item\">\n                  <span className=\"lead\">{tarea.name}</span>\n                  <button\n                    className=\"btn btn-danger btn-sm float-end\"\n                    onClick={() => deleteTask(tarea.id)}\n                  >\n                    Eliminar\n                  </button>\n                  <button\n                    className=\"btn btn-warning btn-sm float-end mx-2\"\n                    onClick={() => editTask(tarea)}\n                  >\n                    Editar\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className=\"col-4\">\n          <h4 className=\"text-info text-center text-uppercase\">\n            {editMode ? \"Modificar Producto\" : \"Agregar Producto\"}\n          </h4>\n          <form className=\"row g-3\" onSubmit={editMode ? saveTask : addTask}>\n            <div className=\"col-md-12\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"validationCustom01\"\n                placeholder=\"Ingrese un Producto\"\n                required\n                onChange={(text) => setTask(text.target.value)}\n                value={task}\n              />\n            </div>\n            <button\n              className={\n                editMode ? \"btn btn-danger btn-block\" : \"btn btn-dark btn-block\"\n              }\n              type=\"submit\"\n            >\n              {editMode ? \"Modificar Producto\" : \"Agregar Producto\"}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}